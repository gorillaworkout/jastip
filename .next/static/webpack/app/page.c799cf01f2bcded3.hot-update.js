"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ModalToggleSSR.tsx":
/*!*******************************************!*\
  !*** ./src/components/ModalToggleSSR.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/button */ \"(app-pages-browser)/./src/components/button.tsx\");\n/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Modal */ \"(app-pages-browser)/./src/components/Modal.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n// Main component with toggle logic\nconst ModalToggleSSR = (param)=>{\n    let { initialOpen } = param;\n    _s();\n    const [isModalOpen, setIsModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialOpen);\n    const [order, setOrder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null) // State to store a single order object\n    ;\n    const toggleModal = ()=>setIsModalOpen(!isModalOpen);\n    const handleSave = (orderData)=>{\n        // Update the order with the latest order data (single object)\n        setOrder(orderData);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(order, \"order\") // Log the latest order\n        ;\n    }, [\n        order\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                    onClick: toggleModal,\n                    className: \"hover:cursor-pointer\",\n                    children: isModalOpen ? \"Add Order\" : \"Open Modal\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\projects\\\\jastip\\\\src\\\\components\\\\ModalToggleSSR.tsx\",\n                    lineNumber: 37,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Modal__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    isOpen: isModalOpen,\n                    toggleModal: toggleModal,\n                    onSave: handleSave\n                }, void 0, false, {\n                    fileName: \"C:\\\\projects\\\\jastip\\\\src\\\\components\\\\ModalToggleSSR.tsx\",\n                    lineNumber: 41,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\projects\\\\jastip\\\\src\\\\components\\\\ModalToggleSSR.tsx\",\n            lineNumber: 36,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false);\n};\n_s(ModalToggleSSR, \"X2t2Mi77TaeMZd3XJGXL9yGsHQo=\");\n_c = ModalToggleSSR;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModalToggleSSR);\nvar _c;\n$RefreshReg$(_c, \"ModalToggleSSR\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL01vZGFsVG9nZ2xlU1NSLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUMyQztBQUNDO0FBQ2pCO0FBYzNCLG1DQUFtQztBQUNuQyxNQUFNSSxpQkFBZ0Q7UUFBQyxFQUFFQyxXQUFXLEVBQUU7O0lBQ3BFLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHUCwrQ0FBUUEsQ0FBVUs7SUFDeEQsTUFBTSxDQUFDRyxPQUFPQyxTQUFTLEdBQUdULCtDQUFRQSxDQUFtQixNQUFNLHVDQUF1Qzs7SUFFbEcsTUFBTVUsY0FBYyxJQUFNSCxlQUFlLENBQUNEO0lBRTFDLE1BQU1LLGFBQWEsQ0FBQ0M7UUFDbEIsOERBQThEO1FBQzlESCxTQUFTRztJQUNYO0lBRUFYLGdEQUFTQSxDQUFDO1FBQ1JZLFFBQVFDLEdBQUcsQ0FBQ04sT0FBTyxTQUFTLHVCQUF1Qjs7SUFDckQsR0FBRztRQUFDQTtLQUFNO0lBRVYscUJBQ0U7a0JBQ0UsNEVBQUNPOzs4QkFDQyw4REFBQ2Isc0RBQU1BO29CQUFDYyxTQUFTTjtvQkFBYU8sV0FBVTs4QkFDckNYLGNBQWMsY0FBYzs7Ozs7OzhCQUcvQiw4REFBQ0gsOENBQUtBO29CQUFDZSxRQUFRWjtvQkFBYUksYUFBYUE7b0JBQWFTLFFBQVFSOzs7Ozs7Ozs7Ozs7O0FBb0J0RTtHQTFDTVA7S0FBQUE7QUE0Q04sK0RBQWVBLGNBQWNBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvTW9kYWxUb2dnbGVTU1IudHN4P2M3MTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvYnV0dG9uJ1xyXG5pbXBvcnQgTW9kYWwgZnJvbSAnLi9Nb2RhbCdcclxuXHJcbmludGVyZmFjZSBNb2RhbFRvZ2dsZVNTUlByb3BzIHtcclxuICBpbml0aWFsT3BlbjogYm9vbGVhblxyXG59XHJcblxyXG5pbnRlcmZhY2UgT3JkZXJEYXRhIHtcclxuICBuYW1lOiBzdHJpbmdcclxuICBhZGRyZXNzOiBzdHJpbmdcclxuICBwaG9uZTogc3RyaW5nXHJcbiAgcmVjZWl2ZVRpbWU6IHN0cmluZ1xyXG4gIHByaWNlUGVyS2c6IHN0cmluZ1xyXG59XHJcblxyXG4vLyBNYWluIGNvbXBvbmVudCB3aXRoIHRvZ2dsZSBsb2dpY1xyXG5jb25zdCBNb2RhbFRvZ2dsZVNTUjogUmVhY3QuRkM8TW9kYWxUb2dnbGVTU1JQcm9wcz4gPSAoeyBpbml0aWFsT3BlbiB9KSA9PiB7XHJcbiAgY29uc3QgW2lzTW9kYWxPcGVuLCBzZXRJc01vZGFsT3Blbl0gPSB1c2VTdGF0ZTxib29sZWFuPihpbml0aWFsT3BlbilcclxuICBjb25zdCBbb3JkZXIsIHNldE9yZGVyXSA9IHVzZVN0YXRlPE9yZGVyRGF0YSB8IG51bGw+KG51bGwpIC8vIFN0YXRlIHRvIHN0b3JlIGEgc2luZ2xlIG9yZGVyIG9iamVjdFxyXG5cclxuICBjb25zdCB0b2dnbGVNb2RhbCA9ICgpID0+IHNldElzTW9kYWxPcGVuKCFpc01vZGFsT3BlbilcclxuXHJcbiAgY29uc3QgaGFuZGxlU2F2ZSA9IChvcmRlckRhdGE6IE9yZGVyRGF0YSkgPT4ge1xyXG4gICAgLy8gVXBkYXRlIHRoZSBvcmRlciB3aXRoIHRoZSBsYXRlc3Qgb3JkZXIgZGF0YSAoc2luZ2xlIG9iamVjdClcclxuICAgIHNldE9yZGVyKG9yZGVyRGF0YSlcclxuICB9XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhvcmRlciwgJ29yZGVyJykgLy8gTG9nIHRoZSBsYXRlc3Qgb3JkZXJcclxuICB9LCBbb3JkZXJdKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPGRpdj5cclxuICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e3RvZ2dsZU1vZGFsfSBjbGFzc05hbWU9XCJob3ZlcjpjdXJzb3ItcG9pbnRlclwiPlxyXG4gICAgICAgICAge2lzTW9kYWxPcGVuID8gJ0FkZCBPcmRlcicgOiAnT3BlbiBNb2RhbCd9XHJcbiAgICAgICAgPC9CdXR0b24+XHJcblxyXG4gICAgICAgIDxNb2RhbCBpc09wZW49e2lzTW9kYWxPcGVufSB0b2dnbGVNb2RhbD17dG9nZ2xlTW9kYWx9IG9uU2F2ZT17aGFuZGxlU2F2ZX0gLz5cclxuXHJcbiAgICAgICAgey8qIERpc3BsYXkgc2F2ZWQgb3JkZXIgKi99XHJcbiAgICAgICAgey8qIDxkaXYgY2xhc3NOYW1lPVwibXQtOFwiPlxyXG4gICAgICAgICAgPGgzPlNhdmVkIE9yZGVyOjwvaDM+XHJcbiAgICAgICAgICB7b3JkZXIgPyAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz5DdXN0b21lcjo8L3N0cm9uZz4ge29yZGVyLm5hbWV9PC9wPlxyXG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+QWRkcmVzczo8L3N0cm9uZz4ge29yZGVyLmFkZHJlc3N9PC9wPlxyXG4gICAgICAgICAgICAgIDxwPjxzdHJvbmc+UGhvbmU6PC9zdHJvbmc+IHtvcmRlci5waG9uZX08L3A+XHJcbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz5SZWNlaXZlIFRpbWU6PC9zdHJvbmc+IHtvcmRlci5yZWNlaXZlVGltZX08L3A+XHJcbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz5QcmljZSBwZXIgS0c6PC9zdHJvbmc+IHtvcmRlci5wcmljZVBlcktnfTwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICA8cD5ObyBvcmRlciBzYXZlZCB5ZXQuPC9wPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L2Rpdj4gKi99XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC8+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNb2RhbFRvZ2dsZVNTUlxyXG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJCdXR0b24iLCJNb2RhbCIsIk1vZGFsVG9nZ2xlU1NSIiwiaW5pdGlhbE9wZW4iLCJpc01vZGFsT3BlbiIsInNldElzTW9kYWxPcGVuIiwib3JkZXIiLCJzZXRPcmRlciIsInRvZ2dsZU1vZGFsIiwiaGFuZGxlU2F2ZSIsIm9yZGVyRGF0YSIsImNvbnNvbGUiLCJsb2ciLCJkaXYiLCJvbkNsaWNrIiwiY2xhc3NOYW1lIiwiaXNPcGVuIiwib25TYXZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ModalToggleSSR.tsx\n"));

/***/ })

});